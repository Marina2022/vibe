'use server'

import {cookies} from 'next/headers'
import {logout} from "@/features/auth/actions/logout";


export async function fetchFromServerWithAuth(url: string, options: RequestInit = {}) {
  const cookieStore = await cookies()
  const accessToken = cookieStore.get('access_token')?.value
  const refreshToken = cookieStore.get('refresh_token')?.value

  if (!refreshToken || !accessToken) await logout()

  // –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –≤ –∑–∞–ø—Ä–æ—Å–µ:
  // console.log('‚û°Ô∏è FETCH ‚Üí', url)
  // console.log('üî∏ Request headers:',{
  //   Authorization: `Bearer ${accessToken}`,
  //   ...(options.headers || {}),
  // })

  // –≤—ã–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—Ä–æ—Å
  let res = await fetch(url, {
    ...options,
    headers: {
      Authorization: `Bearer ${accessToken}`,
      ...(options.headers || {}),
    }
  })

  // –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –∏—Å—Ç—ë–∫, –ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å

  if (res.status === 401 && refreshToken) {
    // console.log('–ü—Ä–æ–±—É–µ–º refresh')
    const refreshed = await refreshTokens(refreshToken)
    console.log('refreshed', refreshed)

    // –µ—Å–ª–∏ —Ä–µ—Ñ—Ä–µ—à —Ç–æ–∫–µ–Ω –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å - —Ä–∞–∑–ª–æ–≥–∏–Ω–∏–≤–∞–µ–º –∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ –ª–æ–≥–∏–Ω
    if (!refreshed) await logout()

    // –∑–∞—Å–µ—Ç–∞—Ç—å –∫—É–∫–∏ –ø–æ–ª—É—á–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤ server-action —ç—Ç–æ—Ç fetch –≤—ã–∑—ã–≤–∞–µ–º
    const cookiesStore = await cookies()
    cookiesStore.set('access_token', refreshed.access_token, { httpOnly: true, path: '/', secure: true })
    cookiesStore.set('refresh_token', refreshed.refresh_token, { httpOnly: true, path: '/', secure: true })
    cookiesStore.set('expires_in', refreshed.expires_in, { httpOnly: true, path: '/', secure: true })

    // –ø–æ–≤—Ç–æ—Ä–∏–º –∑–∞–ø—Ä–æ—Å —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º
    res = await fetch(url, {
      ...options,
      headers: {
        Authorization: `Bearer ${refreshed.access_token}`,
        ...(options.headers || {}),
      }
    })
  }

  return await res.json()
}

// –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è /refresh
async function refreshTokens(refreshToken: string) {
  try {
    const res = await fetch(`${process.env.AUTH_API_URL}/auth`, {
      method: 'POST',
      headers: {'Content-Type': 'application/json'},
      body: JSON.stringify({
        grant_type: 'refresh_token',
        refresh_token: refreshToken,
        client_id: 'primetime',
      }),
    });
    if (!res.ok) throw new Error('Refresh failed')
    return res.json()
  } catch (err) {
    console.error('Refresh error:', err)
    return null
  }
}
