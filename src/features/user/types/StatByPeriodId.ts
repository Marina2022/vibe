export type Period = {
  date_open: string;
  name: string;
  date_close: string;
  id: string;
  state: string;
  bonus_cost_item: string;
  gift_cost_item: string;
};

export type User = {
  birthday: string;
  gender: string;
  timezone: string;
  settlement_fias_id: string;
  pat_name: string;
  last_name: string;
  telegram: string;
  instagram: string;
  login: string;
  delete: number;
  settlement: string;
  phone: string;
  date_create: string;
  theme: string;
  id: string;
  first_name: string;
  payout_state: string;
  email: string;
  zulip_api_key: string;
  restore_code: string;
};

export type Child = {
  id: string;
  login: string;
  last_name: string;
  first_name: string;
  go: number;
};

export type BranchCount = {
  [key: string]: number;
};

export type StatByPeriodId = {
  boost_ap_2_bonus: number;
  boost_m1_1_bonus: number;
  infinity_bonus: number;
  lo: number;
  cashback_total_800_bonus: number;
  boost_m2_1_bonus: number;
  invite_bonus: number;
  cashback_bonus: number;
  premium: number;
  ob: number;
  fix: number;
  client: number;
  id: string;
  state: string;
  boost_gm_2_bonus: number;
  tour_bonus: number;
  prime_bonus: number;
  cashback_total_5000_bonus: number;
  cashback_total_2000_bonus: number;
  boost_ap_1_bonus: number;
  newbie: number;
  prime_bonus_info: string;
  team_bonus: number;
  go: number;
  cashback_bonus_info: string;
  active: number;
  boost_m2_2_bonus: number;
  boost_m1_2_bonus: number;
  lifestyle_bonus: number;
  dynamics_bonus: number;
  qual_name: string;
  invite_bonus_info: string;
  nlo: number;
  team_bonus_info: string;
  infinity_bonus_info: string;
  premium_gift: number;
  dynamics_bonus_info: string;
  boost_gm_1_bonus: number;
  qual: number;
  start_bonus: number;
  period: Period;
  user: User;
  ol1: number;
  ol2: number;
  ol3: number;
  ol4: number;
  ol5: number;
  ol6: number;
  ol7: number;
  ol8: number;
  ol9: number;
  ol10: number;
  ol11: number;
  ol12: number;
  ol13: number;
  ol14: number;
  ol15: number;
  income_structure: number;
  income_structure_period: number;
  income_total: number;
  income_premium: number;
  income_premium_gift: number;
  active_user: number;
  total_active_user: number;
  total_count_partner: number;
  branch_count: BranchCount;
  children_list: Record<string, Child>;
  new_qual: number;
  percent_diff_go: string;
  new_partner: number;
};
